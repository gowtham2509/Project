create or replace table staff(staff_id int,
                              first_name varchar,
                              last_name varchar,
                              address_id int,
                              email varchar,
                              store_id int,
                              active int,
                              username varchar,
                              password varchar,
                              last_update varchar
                             );
                             
create or replace stream staff_stream on table raw_table;


create or replace task staff_task
warehouse='PROJECT'
schedule='1 minute'
allow_overlapping_execution=false
suspend_task_after_num_failures=1
when system$stream_has_data('staff_stream')
as
merge into staff tgt using(select metadata$action,metadata$isupdate,
                                  load_data:staff_id::int as staff_id,
                                  load_data:first_name::varchar as first_name,
                                  load_data:last_name::varchar as last_name,
                                  load_data:address_id::int as address_id,
                                  load_data:email::varchar as email,
                                  load_data:store_id::int as store_id,
                                  load_data:active::int as active,
                                  load_data:username::varchar as username,
                                  load_data:password::varchar as password,
                                  load_data:last_update::varchar as last_update
                                  from staff_stream where file_name like '%staff_%') src  
                                  on src.staff_id=tgt.staff_id
                                  when matched and src.metadata$action='DELETE' then delete
                                  when matched and src.metadata$action='INSERT' and src.metadata$isupdate='FALSE'
                                  then update set
                                  tgt.first_name=src.first_name,
                                  tgt.last_name=src.last_name,
                                  tgt.address_id=src.address_id,
                                  tgt.email=src.email,
                                  tgt.store_id=src.store_id,
                                  tgt.active=src.active,
                                  tgt.username=src.username,
                                  tgt.password=src.password,
                                  tgt.last_update=src.last_update
                                  when not matched  
                                  then insert
(tgt.staff_id,tgt.first_name,tgt.last_name,tgt.address_id,tgt.email,tgt.store_id,tgt.active,tgt.username,tgt.password,tgt.last_update)
   values
(src.staff_id,src.first_name,src.last_name,src.address_id,src.email,src.store_id,src.active,src.username,src.password,src.last_update);


select system$pipe_status('project_pipe');
alter pipe project_pipe refresh;

describe task staff_task;
alter task staff_task resume;
alter task staff_task suspend;

select * from table (information_schema.task_history());

select * from raw_table;

select * from staff;

select * from staff_stream;