create or replace table language(language_id int,
                                 name varchar,
                                 last_update varchar
                                );
                                
create or replace stream language_stream on table raw_table;


create or replace task language_task
warehouse='PROJECT'
schedule='1 minute'
allow_overlapping_execution=false
suspend_task_after_num_failures=1
when system$stream_has_data('language_stream')
as
merge into language tgt using(select metadata$action,metadata$isupdate,
                                  load_data:language_id::int as language_id,
                                  load_data:name::varchar as name,
                                  load_data:last_update::varchar as last_update
                                  from language_stream where file_name like '%Language_%') src 
                                  on src.language_id=tgt.language_id
                                  when matched and src.metadata$action='DELETE' then delete
                                  when matched and src.metadata$action='INSERT' and src.metadata$isupdate='FALSE'
                                  then update set
                                  tgt.name=src.name,
                                  tgt.last_update=src.last_update
                                  when not matched  
                                  then insert
           (tgt.language_id,tgt.name,tgt.last_update)
           values
           (src.language_id,src.name,src.last_update);
           
           
select system$pipe_status('project_pipe');
alter pipe project_pipe refresh;

describe task language_task;
alter task language_task resume;
alter task language_task suspend;

select * from table (information_schema.task_history());

select * from raw_table;

select * from language;

select * from language_stream;